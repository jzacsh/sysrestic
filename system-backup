#!/usr/bin/env bash
set -euo pipefail

stamp() (
  local msg="$1";shift
  printf -- '[%s] '"$msg" "$(date --iso-8601=ns)" "$@"
)
die() {
  local msg="$1"; shift
  stamp 'FATAL: '"$msg" "$@" >&2
  exit 1
}

########################
# basic ui: usage checks

this="$(readlink -f "${BASH_SOURCE[0]}")"; declare -r this
[[ "$#" -ge 2 ]] ||
  die \
    'usage: %s SRC_DIR DST_DIR [SYS_EXCLUDE USR_EXCLUDE[...]]\n' \
    "$(basename "$this")"

declare -r src="$1"
declare -r dst="$2"
shift 2

cleanup() (
  stamp 'Caught EXIT; cleaning up\n' >&2
  if [[ -n "$excludesFiles" ]];then
    rm -v "$excludesFiles"
  fi
  stamp 'Cleanup done.\n' >&2
)
trap cleanup EXIT

########################
# process excludes files

excludesFiles="$(mktemp --tmpdir=  "sysbk_auto_"$(date +%s)"_excludes-XXXXXXXX.txt")"
if [[ "$#" -gt 0 ]];then
  thisDir="$(dirname "$this")"
  {
    "$thisDir"/build-exclude "$@" ||
        die 'failed to build excludes file [exited %d]\n' $?;
  } > "$excludesFiles"
fi

###############
# sanity checks

[[ "$EUID" -eq 0 ]] || die 'MUST be run as root, but found $EUID=%s\n' "$EUID"
[[ "${RESTIC_PASSWORD:-x}" != x ]] ||
  die 'MUST have $RESTIC_PASSWORD set, else cannot backup\n'
type restic >/dev/null 2>&1 || die 'backup program `restic` is not in $PATH\n'


#################
# actual business

stamp 'backing up\n  from:\t%s\n  into:\t%s\n  given excludes:\n%s\n' \
  "$(date --iso-8601=ns)" "$src" "$dst" "$(cat -n "$excludesFiles")"
time (
  set -x
  restic backup --exclude-file "$excludesFiles" --repo "$dst" "$src"
)
