#!/usr/bin/env bash
set -euo pipefail

[[ "$#" -ge 1 ]] || {
  printf 'Usage: %s SYSTEM_EXCLUDES [USR_EXCLUDE, ...]\n
  File arguments are positional. All files are one path pattern per-line.

  Valid patterns are documented within the first few paragraphs of the "create a
  snasphot" section of this document:\n\t%s

  Argumetns:
  - SYSTEM_EXCLUDES contains excludes for system-wide directories.

  - USR_EXCLUDE files are some arbitrary number of exclude files whose suffix is
    ".$USER"; eg: foo.alic, excludes.bob. From the suffix, a $HOME is determined
    and set as an environment variable when parsing the file.
' \
  "$(basename "$0")" \
  'https://github.com/restic/restic/blob/144b7f33864b5/doc/manual.rst#create-a-snapshot' >&2
  exit 1
}

declare -r sysExclude="$1"; shift

(
  cat "$sysExclude"
  for usrExcFile in "$@";do
    usr="${usrExcFile#*\.}"
    homeDir="$(grep "$usr" /etc/passwd | cut -f 6 -d :)"
    [[ -e "$homeDir" ]] || {
      printf 'error: $HOME="%s" does not exist for $USER="%s" from %s\n' \
        "$homeDir" "$usr" "$usrExcFile" >&2
      exit 1
    }

    while read line; do
      (
        set -o noglob
        printf '%s\n' "$(HOME="$homeDir" eval "echo $line")"
      )
    done < "$usrExcFile"
  done
) | sort
